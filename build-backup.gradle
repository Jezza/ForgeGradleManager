buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

// Statement
apply plugin: 'forge'

// Fields
sourceCompatibility = '1.7'
targetCompatibility = '1.7'

version = "1.2.1a"
group = "me.jezza.thaumicpipes"
archivesBaseName = "ThaumicPipes"

sourceSets {
    main {
        java {
            srcDir "G:/Minecraft/source/Thaumic-Pipes/tp_common"
        }
        resources {
            srcDir "G:/Minecraft/source/Thaumic-Pipes/resources"
        }
    }
}
 
minecraft {
    version = "1.7.10-10.13.2.1286"
    runDir = "eclipse"
}

dependencies {
    compile fileTree('eclipse/mods')
	// compile files('path/to/file.jar')
}
// |method call| method call | method call| FUNCTION_NAME | FUNCTION_START | file -> 
configurations.compile.copy().each { file ->
    logger.lifecycle "Processing ${file.path}..."
    copy {
        from(zipTree(file.path)) {
            includeEmptyDirs = false
            include '**/*_at.cfg'
        }
        into('src/api/resources/at')
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
	version = minecraft.version + " - " + project.version
	classifier = "universal"
}

task srcJar(type: Jar, dependsOn: 'sourceMainJava') {
	// from sourceSets.main.allSource
	from "build/sources/java"
	version = minecraft.version + " - " + project.version
	classifier = "src"
}

task devJar(type: Jar, dependsOn: 'classes') {
    from sourceSets.main.output
	version = minecraft.version + " - " + project.version
    classifier = "dev"
}

artifacts {
    archives devJar
    archives srcJar
}

project.tasks.build.dependsOn devJar, srcJar
